/**
 * Generated by FakerAndroid for doc or help by https://github.com/Efaker/FakerAndroid
 */
#include <jni.h>
#include <string>
#include "common.h"
#include <fstream>
#include <sstream>
#include "include/faker.h"
#include "Il2cpp-Scaffolding-ARM64/il2cpp-init.h"
#include "Il2cpp-Scaffolding-ARM64/il2cpp-appdata.h"
using namespace app;
JavaVM *global_jvm;
game_counter* gc;
game_controller* gameController;
shop_page_controller* shop_controller;
JNIEXPORT jint JNI_OnLoad(JavaVM *vm, void *reserved) {
    JNIEnv *env;
    if ((*vm).GetEnv(reinterpret_cast<void **>(&env), JNI_VERSION_1_6) == JNI_OK) {
        LOGI("JNI_OnLoad %s","sucess");
    }else{
        LOGI("JNI_OnLoad %s","erro");
    }
    global_jvm = vm;

    return onJniLoad(vm,reserved);
}


static jobject callBack;
/**
 * in your replace_call method you can call this method to call java
 * @param event
 */
void callJava(const char *event) {
    if(callBack==NULL) {
        return;
    }
    JNIEnv* env;
    global_jvm->GetEnv(reinterpret_cast<void **>(&env), JNI_VERSION_1_4);
    jclass clazz = env->GetObjectClass(callBack);
    jmethodID onCall = env->GetMethodID(clazz, "onJniCall", "(Ljava/lang/String;)V");
    jstring envent = env->NewStringUTF(event);
    env->CallVoidMethod(callBack, onCall, envent);
    env->DeleteLocalRef(envent);
}


void Hookgame_controller_WatchAd_CoinsReward(game_controller* __this, const MethodInfo* method){
    LOGE("Hookgame_controller_WatchAd_CoinsReward");
    //MaxSdkAndroid_ShowRewardedAd(keyEvent,keyEvent,keyEvent,method);

    callJava("111");
}


void Hookshop_page_controller__toggle_bundle_page(shop_page_controller* __this, const MethodInfo* method){
    LOGE("shop_page_controller__toggle_bundle_page");
    //MaxSdkAndroid_ShowRewardedAd(keyEvent,keyEvent,keyEvent,method);
}


void Hookshop_page_controller_WatchAd_CoinsReward(shop_page_controller* __this, const MethodInfo* method){
    LOGE("Hookshop_page_controller_WatchAd_CoinsReward");

    //game_counter_set_Coins(gc,game_counter_get_Coins(gc,NULL)+5,NULL);
    //game_counter__Update(gc,NULL);
    shop_controller=__this;
    //game_controller__update_coins(gameController,NULL);
    //MaxSdkAndroid_ShowRewardedAd(keyEvent,keyEvent,keyEvent,method);
    callJava("reward");
}

void HookSideMenu_Controller_WatchAd_CoinsReward(SideMenu_Controller* __this, const MethodInfo* method){
    LOGE("HookSideMenu_Controller__WatchAd_CoinsReward");
    //MaxSdkAndroid_ShowRewardedAd(keyEvent,keyEvent,keyEvent,method);
    callJava("111");
}

int32_t Hookgame_counter_get_Coins(game_counter* __this, const MethodInfo* method){
    int32_t money=game_counter_get_Coins(__this,NULL);
    LOGE("Hookgame_counter_get_Coins");
    if(money>=10000){
        return 0;
    }else{
        return money;
    }
}

void Hookgame_counter_get_Instance(const MethodInfo* method){
    LOGE("Hookgame_counter___ctor");
    //MaxSdkAndroid_ShowRewardedAd(keyEvent,keyEvent,keyEvent,method);
    gc=game_counter_get_Instance(method);
}


void HookPlayerPrefsController__SetCoinsData(int32_t Coins, const MethodInfo* method){
    LOGE("HookPlayerPrefsController__SetCoinsData");
    if(Coins>=10000){
        Coins=0;
    }
    PlayerPrefsController__SetCoinsData(Coins,method);
}

int32_t HookPlayerPrefsController__GetCoinsData(const MethodInfo* method){
    LOGE("HookPlayerPrefsController__SetCoinsData");
    int32_t money = PlayerPrefsController__GetCoinsData(NULL);
    if(money>=10000){
        return 0;
    }else{
        return PlayerPrefsController__GetCoinsData(NULL);
    }
}


extern "C"
JNIEXPORT void JNICALL
Java_com_android_boot_App_fakeApp(JNIEnv *env, jobject thiz, jobject application) {
    /**
     * you can do yor hook work here
     * below  is demo code demo code hook libil2cpp.so
     */
     //long base = baseImageAddr("libil2cpp.so");
     //LOGE("baseImageAddr : %ld",base);
     //By ida get or ghidra get the method offset
     //Behaviour_get_isActiveAndEnabled =base + offset,HookedBehaviour_get_isActiveAndEnabled = your define method,Behaviour_get_isActiveAndEnabled =  base + offset
    long base = baseImageAddr("libil2cpp.so");
    LOGE("baseImageAddr : %ld",base);
    init_il2cpp(base);
     fakeCpp((void *) game_controller_WatchAd_CoinsReward, (void *)Hookgame_controller_WatchAd_CoinsReward ,reinterpret_cast<void **>(&game_controller_WatchAd_CoinsReward));
     fakeCpp((void *) shop_page_controller_WatchAd_CoinsReward, (void *)Hookshop_page_controller_WatchAd_CoinsReward ,reinterpret_cast<void **>(&shop_page_controller_WatchAd_CoinsReward));
     fakeCpp((void *) SideMenu_Controller_WatchAd_CoinsReward, (void *)HookSideMenu_Controller_WatchAd_CoinsReward ,reinterpret_cast<void **>(&SideMenu_Controller_WatchAd_CoinsReward));
     fakeCpp((void *) game_counter_get_Instance, (void *)Hookgame_counter_get_Instance ,reinterpret_cast<void **>(&game_counter_get_Instance));
     //fakeCpp((void *) game_controller__update_coins, (void *)Hookgame_controller__update_coins ,reinterpret_cast<void **>(&game_controller__update_coins));
     fakeCpp((void *) shop_page_controller__toggle_bundle_page, (void *)Hookshop_page_controller__toggle_bundle_page ,reinterpret_cast<void **>(&shop_page_controller__toggle_bundle_page));
     fakeCpp((void *) PlayerPrefsController__SetCoinsData, (void *)HookPlayerPrefsController__SetCoinsData ,reinterpret_cast<void **>(&PlayerPrefsController__SetCoinsData));
     fakeCpp((void *) PlayerPrefsController__GetCoinsData, (void *)HookPlayerPrefsController__GetCoinsData ,reinterpret_cast<void **>(&PlayerPrefsController__GetCoinsData));
       //fakeCpp((void *) game_counter__Update, (void *)Hookgame_counter__Update ,reinterpret_cast<void **>(&game_counter__Update));

}
extern "C"
JNIEXPORT void JNICALL
Java_com_android_boot_App_fakeDex(JNIEnv *env, jobject thiz, jobject base) {
    fakeDex(env,base,"dex");//dex collapse feature support
}

extern "C"
JNIEXPORT void JNICALL
Java_com_android_boot_MainActivity_registerCallBack(JNIEnv *env, jobject thiz,jobject object) {
    /**
     * init the callback global for other c++ method to call
     */
    callBack = env->NewGlobalRef(object);//
}
extern "C"
JNIEXPORT void JNICALL
Java_com_android_boot_MainActivity_getsMoney(JNIEnv *env, jobject thiz) {
    // TODO: implement getsMoney()

    shop_page_controller__grant_Coins_Reward(shop_controller,true,NULL);
}